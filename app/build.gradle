apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'hu.supercluster.paperwork'
apply from: '../code_quality_tools/jacoco.gradle'
apply from: '../build_system/dependencies.gradle'

paperwork {
  set = [
      gitSha:    gitSha(),
      buildDate: buildTime("dd-MM-yyyy HH::mm:ss z", "UTC"),
  ]
  filename = 'src/debug/assets/paperwork.json'
}

android {
  compileSdkVersion 23
  buildToolsVersion "23.0.2"

  defaultConfig {
    applicationId "com.lenguyenthanh.snowball"
    minSdkVersion 15
    targetSdkVersion 23
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner 'com.lenguyenthanh.daggerspike.util.AndroidJacocoTestRunner'
  }

  buildTypes {
    release {
      signingConfig signingConfigs.debug
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
    debug {
      signingConfig signingConfigs.debug
      applicationIdSuffix '.debug'
    }

    internal {
      signingConfig signingConfigs.debug
      applicationIdSuffix '.internal'
    }
  }

  signingConfigs {
    debug {
      storeFile rootProject.file('build_syste/debug.keystore')
      storePassword 'android'
      keyAlias 'android'
      keyPassword 'android'
    }
  }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/services/javax.annotation.processing.Processor'
  }

  lintOptions {
    warningsAsErrors true
    abortOnError true // Fail early.

    disable 'GoogleAppIndexingWarning' // App does not have deep linking.
    disable 'InvalidPackage' // Okio references java.nio that does not presented in Android SDK.
  }

  packagingOptions {
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/services/javax.annotation.processing.Processor'
  }

  // This allows us see tests execution progress in the output on the CI.
  testOptions.unitTests.all {
    testLogging {
      events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
      exceptionFormat 'full'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

}

repositories {
  maven {url "https://clojars.org/repo/"}
}

dependencies {
  // Mvp
  compile libraries.nimble

  // Reactive
  compile libraries.rxJava
  compile libraries.rxAndroid

  // Dagger 2
  compile libraries.dagger
  apt libraries.daggerCompiler
  compile libraries.javaxInject
  compile libraries.javaxAnnotationApi

  // Retrofit
  compile libraries.okHttp
  compile libraries.retrofit
  compile libraries.retrofitJacksonConverter
  compile libraries.retrofitRxJavaAdapter
  compile libraries.jacksonDataBind

  compile libraries.autoValue

  compile libraries.supportAnnotations
  compile libraries.supportAppCompat
  compile libraries.supportDesign
  compile libraries.supportRecyclerView
  compile libraries.supportCardView

  compile libraries.butterKnife
  compile libraries.picasso
  compile libraries.picassoOkHttpDownloader
  compile libraries.timber



  // saving view state
  compile libraries.icepick
  apt libraries.icepickCompiler

  // debug tools
  debugCompile libraries.okHttpLoggingInterceptor
  debugCompile libraries.stetho
  debugCompile libraries.stethoOkHttp
  debugCompile libraries.leakCanary
  debugCompile libraries.paperwork

  testCompile libraries.junit
  testCompile libraries.robolectric
  testCompile libraries.assertJ
  testCompile libraries.equalsVerifier
  testCompile libraries.okHttpMockWebServer
  testCompile libraries.mockitoCore


  androidTestCompile libraries.supportTestRunner
  androidTestCompile libraries.supportTestRules
  androidTestCompile libraries.espressoCore
  androidTestCompile(libraries.espressoContrib) {
    // Causes IncompatibleClassChangeError. As alwaysâ€¦
    exclude module: 'support-annotations'
    exclude module: 'recyclerview-v7'
    exclude module: 'support-v4'
  }
  androidTestCompile libraries.okHttpMockWebServer
}

def installAll = tasks.create('installAll')
installAll.description = 'Install all applications.'
android.applicationVariants.all { variant ->
  installAll.dependsOn(variant.install)
  // Ensure we end up in the same group as the other install tasks.
  installAll.group = variant.install.group
}

configurations.all {
  resolutionStrategy {
    // Force our version of support-annotations, we have a conflict between app and androidTest dependency resolution.
    force libraries.supportAnnotations
  }
}
